{"title":"ARMA and ARIMA Models","markdown":{"yaml":{"title":"ARMA and ARIMA Models"},"headingText":"Globalization Index:","containsRefs":false,"markdown":"\n\nARMA and ARIMA Models are used in time-series in order to forecast the time series object at had. Thus, we will take a look at both the globalization index as well as the stock fluctuation of HYBE Co. in order to forecast values and make future predictions. These metrics will help us determine the impact globalization in conjunction with record labels like HYBE have within the United States and the Western music world. \n\nFrom our [Exploratory Data Analysis](https://shriya-chinthak.georgetown.domains/DSAN_5600/eda.html), we noticed the following information: \n\n* Prior to differncing, the ACF plot show several lags above the significance bands, indicating a **non-stationary** relationship. \n* The Augmented Dickey-Fuller Test confirmed that the data itself was **NOT stationary**.\n\nThus, using this information, we will move on to differencing to fit the data to become stationary: \n```{r}\n#| echo: false\n#| warning: false\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(forecast)\nlibrary(astsa) \nlibrary(xts)\nlibrary(tseries)\nlibrary(fpp2)\nlibrary(fma)\nlibrary(lubridate)\nlibrary(tidyverse)\nlibrary(TSstudio)\nlibrary(quantmod)\nlibrary(tidyquant)\nlibrary(plotly)\nlibrary(ggplot2)\nlibrary(imputeTS)\nlibrary(gridExtra)\nlibrary(reticulate)\nlibrary(readxl)\nuse_python(\"/usr/local/bin/python3\", require = T)\nknitr::knit_engines$set(python = reticulate::eng_python)\n```\n\n```{r}\n#| echo: false\n#| warning: false\nglobal <- read_csv('globalization.csv')\n\n# Filter information\nglobal <- global %>%\n  filter(country == 'United States') %>%\n  select(year, KOFGI) %>%\n  mutate(year = as.Date(year))\n\n# Create time series\nglobal_ts <-ts(global$KOFGI, star=decimal_date(as.Date(\"1970-01-01\", format = \"%Y-%m-%d\")), frequency = 1)\n```\n\n```{r}\n#| code-fold: true\n#| code-summary: 'Differencing Code'\n#| warning: false\n\n\ndff_global <- diff(global_ts)\n\np1 <- ggAcf(global_ts)+ggtitle(\"ACF Plot for Globalization Index\")\np2 <- ggPacf(global_ts)+ggtitle(\"PACF Plot for Globalization Index\")\n\np3 <- ggAcf(global_ts %>% diff())+ggtitle(\"ACF Plot for First Differenced Globalization Index\")\np4 <- ggPacf(global_ts %>% diff())+ggtitle(\"PACF Plot for First Differenced Globalization Index\")\n\ngrid.arrange(p1, p2, nrow=2)\ngrid.arrange(p3, p4, nrow=2)\n```\n\nFrom the ACF and PACF plots of the first differenced time series object, we can now see that lag values are all contained inside the significance bands, meaning that this distribution is in fact, **stationary**. \n\nLet's see the Augumented Dickey-Fuller score for the first differenced data: \n```{r}\n#| warning: false\n#| echo: false\ndiff_global_test <- adf.test(dff_global)\nprint(diff_global_test)\n```\n\nUnfortunetly, since the ADF p-value is 0.09043 > 0.05, we fail to reject the null hypothesis. From the ADF test, the distribution is still stationary. However, because this score is not allows accurate, we will assume the results of the ACF plots are correct to avoid over-differencing. \n\nThus from the plot, we can also state the following: \n\n* Since the ACF plot doesn't have any significant peaks, **q = 0**. \n\n* Since the PACF plot doesn't have any significant peaks, **p = 0**. \n\n* Since we differenced once, **d = 1**.\n\nWhile q and p are zero based on the graph, it's better to run through a multitude of options in order to find the best model for this data.\n\nNow, let's move to creating the ARIMA model:\n```{r}\n#| code-fold: true \n#| code-summary: 'ARIMA Model'\n#| warning: false\n\nset.seed(123)\n\nd=1\ni=1\ntemp= data.frame()\nls=matrix(rep(NA,6*25),nrow=25) # roughly nrow = 5x2 (see below)\n\n\nfor (p in 0:4)# p=0,1,2,3,4 : 5\n{\n  for(q in 0:4)# q=0,1,2,3,4 :5\n  {\n    model<- Arima(global_ts,order=c(p,d,q),include.drift=TRUE) \n    ls[i,]= c(p,d,q,model$aic,model$bic,model$aicc)\n    i=i+1\n  }\n}\n\ntemp= as.data.frame(ls)\nnames(temp)= c(\"p\",\"d\",\"q\",\"AIC\",\"BIC\",\"AICc\")\n\n#temp\nknitr::kable(temp)\n```\n\nThus, we can easily view that the best model has values **p=0, d=1, and q=0**. Let's find the equation\n\n```{r}\n#| code-fold: true\nsarima(global_ts, 0, 1, 0)\n```\n\nFrom the results of the `sarima()` function, we call say that the equation is as follows:\n\n\\begin{align}\nx_{t} = w_{t} -1w_{t-1} + 0.4805\n\\end{align}\n\nFrom the model diagonotics presented, we can also say that the ACF plot of residuals shows no significance, meaning the residuals are not correlated. However, the p-values of the Ljung-Box statistic is much higher than the significance band. While this is not *great*, we can still move forward since the residuals are not significant and that this was the best model of the ones simulated. \n\nNow let's varify with auto arima:\n```{r}\n#| echo: false\nauto.arima(global_ts)\n```\n\n`auto.arima()` concluded that ARIMA(0,2,1) is the best model. Thus, we will try forecasting both that model and ARIMA(0,1,0)\n\nNow let's look at the forecast: \n\nFirst, let's forecast based on the best model \n\n```{r}\n#| code-fold: true \n#| code-summary: 'Forecasting'\n#| warning: false\nfit <- Arima(global_ts, order=c(0, 1, 0))\nautoplot(forecast(fit))\n\nfit2 <- Arima(global_ts, order=c(0, 2, 1))\nautoplot(forecast(fit2))\n```\n\nIt looks like the best model for forecasting was ARIMA(0,2,1), since the forecast continues to follow the linearly positive trend of the data, whereas ARIMA(0,1,0) predicted a constant value. \n\n```{r}\n#| code-fold: true \n#| code-summary: 'Forecast comparison'\n#| warning: false\nsummary(fit2)\n\nautoplot(global_ts) +\n  autolayer(meanf(global_ts, h=11),\n            series=\"Mean\", PI=FALSE) +\n  autolayer(naive(global_ts, h=11),\n            series=\"Naïve\", PI=FALSE) +\n  autolayer(snaive(global_ts, h=11),\n            series=\"Seasonal naïve\", PI=FALSE) +\n  autolayer(forecast(fit2, h=11),\n            series=\"Fit\", PI=FALSE) +\n  ggtitle(\"Forecasts for yearly globalization metric\") +\n  xlab(\"Year\") + ylab(\"KOF Index\") +\n  guides(colour=guide_legend(title=\"Forecast\"))\n```\n\nAfter mapping the model with other benchmarks, it's clear that none of the functions, fitted or benchmarks, accurately forecasts the differenced data. The fitted data seems to the only line approximately in the same range as the overall trend, however, none of them are accurate functions. As a result of this information, it may be worth taking a look at this data un-differenced in order to get a better insight of the globalization index. \n\n# SARIMA Model:\n\nIn order to understand globalization within the USA through the lens on South Korea, we will need to also look at the tourism coming into SK from abroad. An example of this is using monthly air travel passeneger data into Incheon Airport, South Korea's largest international airport. Specifically, we'll be focusing on international flights coming into South Korea as they best represent foreign interest of the nation. \n\n### Seasonal Anlysis\n```{r}\n#| warning: false\n#| code-fold: true\n\n\nsk_passengers <- read_xlsx('sk_passenger_arrivals.xlsx')\n\nsk_passengers <- sk_passengers %>%\n  unite(date, year, month, sep = '-') %>%\n  mutate(date = as.Date(paste(date, '01', sep = '-'))) %>%\n  filter(year(date) < 2020) #In order to avoid the anomaly of the 2020 pandemic\n\nair_travel_ts <- ts(sk_passengers$Passengers, start = c(2010, 10), \n                    frequency = 12)\n\nautoplot(air_travel_ts)+ggtitle(\"Air passenger arrivals to Incheon Airport (SK)\") \n\n```\n\nFrom the plot above, we can see that there is a seasonal pattern of passengers coming into the country yearly. Please note that to avoid anomalies in forecasting, we'll not be training on 2020 data due to the restrictions on travel from the COVID-19 global pandemic. \n\n```{r}\nggAcf(air_travel_ts,40)\ngglagplot(air_travel_ts, do.lines=FALSE, set.lags = c(12, 24, 36, 48))+\n  ggtitle(\"Air passenger arrivals to Incheon Airport (SK)\") \ndec2 <- decompose(air_travel_ts,type = c(\"additive\", \"multiplicative\"))\nplot(dec2)\n```\n\nThrough these graphs, we can see a string seasonal correlation. However, since the data is mutliplicative in nature, we may need to take the log of the data prior to differencing. \n\n```{r}\n#| code-fold: true\n\nlog(air_travel_ts) %>% diff() %>% ggtsdisplay()\nlog(air_travel_ts) %>% diff(12) %>% ggtsdisplay()\nlog(air_travel_ts) %>% diff() %>% diff(12) %>% ggtsdisplay()\n```\n\nFrom the ACF and PACF plots, we can see that the data is the most stationary when the original data is log transformed, first differenced, and seasonally differenced by month. From these plots, we can say that q = 2, p = 2,4, d = 1, Q = 1, and P = 1. \n\nIn order to find the best model, we'll run through mutliple models and find the ones with the lowest AIC and BIC score. \n\n### Determining the Model\n\n```{r}\n#| code-fold: true\n\n#write a function\nSARIMA.c=function(p1,p2,q1,q2,P1,P2,Q1,Q2,data){\n  \n  temp=c()\n  d=1\n  D=1\n  s=12\n  \n  i=1\n  temp= data.frame()\n  ls=matrix(rep(NA,9*35),nrow=35)\n  for (p in p1:p2)\n  {\n    for(q in q1:q2)\n    {\n      for(P in P1:P2)\n      {\n        for(Q in Q1:Q2)\n        {\n          if(p+d+q+P+D+Q<=9)\n          {\n            model<- Arima(data,order=c(p-1,d,q-1),seasonal=c(P-1,D,Q-1))\n            ls[i,]= c(p-1,d,q-1,P-1,D,Q-1,model$aic,model$bic,model$aicc)\n            i=i+1\n          }\n        }\n      }\n    }\n  }\n  \n  temp= as.data.frame(ls)\n  names(temp)= c(\"p\",\"d\",\"q\",\"P\",\"D\",\"Q\",\"AIC\",\"BIC\",\"AICc\")\n  temp\n}\n\noutput=SARIMA.c(p1=1,p2=5,q1=1,q2=3,P1=1,P2=3,Q1=1,Q2=3,data=air_travel_ts)\nknitr::kable(output)\n\noutput[which.min(output$AIC),]\noutput[which.min(output$BIC),]\noutput[which.min(output$AICc),]\n```\n\nBased on the AIC, BIC, and AICc values, we'll go forward with the model ARIMA(0,1,2)x(0,1,1)[12]. Let's analyze this model for it's residuals and siginificant values.\n\n```{r}\n#| code-fold: true\n\nset.seed(123)\nmodel_output <- capture.output(sarima(air_travel_ts, 0,1,2,0,1,1,12))\ncat(model_output[28:60], model_output[length(model_output)], sep = \"\\n\") \n```\n\nThis model seems to be a goof fit for a number of reasons. Primarily, the ACF plot shows almost no correlation, indicating that the model has harnessed everything that left is white noise. This indicates a good model fit. Additionally, the Ljung-Box statistic shows almost no autocorrelation within the model. Lastly, all coefficients within the table are significant. \n\n### Fitting the Model and Forecasting\n\n```{r}\n#| code-fold: true\n\nfit <- Arima(air_travel_ts, order=c(0,1,2), seasonal=c(0,1,1))\nsummary(fit)\n```\n\n\n```{r}\n#| echo: false\nsarima.for(air_travel_ts, 60, 0,1,2,0,1,1,12)\n```\n\nOur forecast shows a positive upwards trend in international passenger arrivals into Incheon Airport, South Korea. Please note, this forecast shows five years into the future if the COVID-19 pandemic didn't cause any anomalies within air travel. However, even knowing that the actual data isn't the same, we can approximate that the travel industry would recover in a similar pattern, with a positive trend of people coming into Korea. Thus, this furthers the narrative of globalization, and specifically, Korean culture reaching outside its country's borders into the West. \n\n\n","srcMarkdownNoYaml":"\n\nARMA and ARIMA Models are used in time-series in order to forecast the time series object at had. Thus, we will take a look at both the globalization index as well as the stock fluctuation of HYBE Co. in order to forecast values and make future predictions. These metrics will help us determine the impact globalization in conjunction with record labels like HYBE have within the United States and the Western music world. \n\n## Globalization Index: \nFrom our [Exploratory Data Analysis](https://shriya-chinthak.georgetown.domains/DSAN_5600/eda.html), we noticed the following information: \n\n* Prior to differncing, the ACF plot show several lags above the significance bands, indicating a **non-stationary** relationship. \n* The Augmented Dickey-Fuller Test confirmed that the data itself was **NOT stationary**.\n\nThus, using this information, we will move on to differencing to fit the data to become stationary: \n```{r}\n#| echo: false\n#| warning: false\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(forecast)\nlibrary(astsa) \nlibrary(xts)\nlibrary(tseries)\nlibrary(fpp2)\nlibrary(fma)\nlibrary(lubridate)\nlibrary(tidyverse)\nlibrary(TSstudio)\nlibrary(quantmod)\nlibrary(tidyquant)\nlibrary(plotly)\nlibrary(ggplot2)\nlibrary(imputeTS)\nlibrary(gridExtra)\nlibrary(reticulate)\nlibrary(readxl)\nuse_python(\"/usr/local/bin/python3\", require = T)\nknitr::knit_engines$set(python = reticulate::eng_python)\n```\n\n```{r}\n#| echo: false\n#| warning: false\nglobal <- read_csv('globalization.csv')\n\n# Filter information\nglobal <- global %>%\n  filter(country == 'United States') %>%\n  select(year, KOFGI) %>%\n  mutate(year = as.Date(year))\n\n# Create time series\nglobal_ts <-ts(global$KOFGI, star=decimal_date(as.Date(\"1970-01-01\", format = \"%Y-%m-%d\")), frequency = 1)\n```\n\n```{r}\n#| code-fold: true\n#| code-summary: 'Differencing Code'\n#| warning: false\n\n\ndff_global <- diff(global_ts)\n\np1 <- ggAcf(global_ts)+ggtitle(\"ACF Plot for Globalization Index\")\np2 <- ggPacf(global_ts)+ggtitle(\"PACF Plot for Globalization Index\")\n\np3 <- ggAcf(global_ts %>% diff())+ggtitle(\"ACF Plot for First Differenced Globalization Index\")\np4 <- ggPacf(global_ts %>% diff())+ggtitle(\"PACF Plot for First Differenced Globalization Index\")\n\ngrid.arrange(p1, p2, nrow=2)\ngrid.arrange(p3, p4, nrow=2)\n```\n\nFrom the ACF and PACF plots of the first differenced time series object, we can now see that lag values are all contained inside the significance bands, meaning that this distribution is in fact, **stationary**. \n\nLet's see the Augumented Dickey-Fuller score for the first differenced data: \n```{r}\n#| warning: false\n#| echo: false\ndiff_global_test <- adf.test(dff_global)\nprint(diff_global_test)\n```\n\nUnfortunetly, since the ADF p-value is 0.09043 > 0.05, we fail to reject the null hypothesis. From the ADF test, the distribution is still stationary. However, because this score is not allows accurate, we will assume the results of the ACF plots are correct to avoid over-differencing. \n\nThus from the plot, we can also state the following: \n\n* Since the ACF plot doesn't have any significant peaks, **q = 0**. \n\n* Since the PACF plot doesn't have any significant peaks, **p = 0**. \n\n* Since we differenced once, **d = 1**.\n\nWhile q and p are zero based on the graph, it's better to run through a multitude of options in order to find the best model for this data.\n\nNow, let's move to creating the ARIMA model:\n```{r}\n#| code-fold: true \n#| code-summary: 'ARIMA Model'\n#| warning: false\n\nset.seed(123)\n\nd=1\ni=1\ntemp= data.frame()\nls=matrix(rep(NA,6*25),nrow=25) # roughly nrow = 5x2 (see below)\n\n\nfor (p in 0:4)# p=0,1,2,3,4 : 5\n{\n  for(q in 0:4)# q=0,1,2,3,4 :5\n  {\n    model<- Arima(global_ts,order=c(p,d,q),include.drift=TRUE) \n    ls[i,]= c(p,d,q,model$aic,model$bic,model$aicc)\n    i=i+1\n  }\n}\n\ntemp= as.data.frame(ls)\nnames(temp)= c(\"p\",\"d\",\"q\",\"AIC\",\"BIC\",\"AICc\")\n\n#temp\nknitr::kable(temp)\n```\n\nThus, we can easily view that the best model has values **p=0, d=1, and q=0**. Let's find the equation\n\n```{r}\n#| code-fold: true\nsarima(global_ts, 0, 1, 0)\n```\n\nFrom the results of the `sarima()` function, we call say that the equation is as follows:\n\n\\begin{align}\nx_{t} = w_{t} -1w_{t-1} + 0.4805\n\\end{align}\n\nFrom the model diagonotics presented, we can also say that the ACF plot of residuals shows no significance, meaning the residuals are not correlated. However, the p-values of the Ljung-Box statistic is much higher than the significance band. While this is not *great*, we can still move forward since the residuals are not significant and that this was the best model of the ones simulated. \n\nNow let's varify with auto arima:\n```{r}\n#| echo: false\nauto.arima(global_ts)\n```\n\n`auto.arima()` concluded that ARIMA(0,2,1) is the best model. Thus, we will try forecasting both that model and ARIMA(0,1,0)\n\nNow let's look at the forecast: \n\nFirst, let's forecast based on the best model \n\n```{r}\n#| code-fold: true \n#| code-summary: 'Forecasting'\n#| warning: false\nfit <- Arima(global_ts, order=c(0, 1, 0))\nautoplot(forecast(fit))\n\nfit2 <- Arima(global_ts, order=c(0, 2, 1))\nautoplot(forecast(fit2))\n```\n\nIt looks like the best model for forecasting was ARIMA(0,2,1), since the forecast continues to follow the linearly positive trend of the data, whereas ARIMA(0,1,0) predicted a constant value. \n\n```{r}\n#| code-fold: true \n#| code-summary: 'Forecast comparison'\n#| warning: false\nsummary(fit2)\n\nautoplot(global_ts) +\n  autolayer(meanf(global_ts, h=11),\n            series=\"Mean\", PI=FALSE) +\n  autolayer(naive(global_ts, h=11),\n            series=\"Naïve\", PI=FALSE) +\n  autolayer(snaive(global_ts, h=11),\n            series=\"Seasonal naïve\", PI=FALSE) +\n  autolayer(forecast(fit2, h=11),\n            series=\"Fit\", PI=FALSE) +\n  ggtitle(\"Forecasts for yearly globalization metric\") +\n  xlab(\"Year\") + ylab(\"KOF Index\") +\n  guides(colour=guide_legend(title=\"Forecast\"))\n```\n\nAfter mapping the model with other benchmarks, it's clear that none of the functions, fitted or benchmarks, accurately forecasts the differenced data. The fitted data seems to the only line approximately in the same range as the overall trend, however, none of them are accurate functions. As a result of this information, it may be worth taking a look at this data un-differenced in order to get a better insight of the globalization index. \n\n# SARIMA Model:\n\nIn order to understand globalization within the USA through the lens on South Korea, we will need to also look at the tourism coming into SK from abroad. An example of this is using monthly air travel passeneger data into Incheon Airport, South Korea's largest international airport. Specifically, we'll be focusing on international flights coming into South Korea as they best represent foreign interest of the nation. \n\n### Seasonal Anlysis\n```{r}\n#| warning: false\n#| code-fold: true\n\n\nsk_passengers <- read_xlsx('sk_passenger_arrivals.xlsx')\n\nsk_passengers <- sk_passengers %>%\n  unite(date, year, month, sep = '-') %>%\n  mutate(date = as.Date(paste(date, '01', sep = '-'))) %>%\n  filter(year(date) < 2020) #In order to avoid the anomaly of the 2020 pandemic\n\nair_travel_ts <- ts(sk_passengers$Passengers, start = c(2010, 10), \n                    frequency = 12)\n\nautoplot(air_travel_ts)+ggtitle(\"Air passenger arrivals to Incheon Airport (SK)\") \n\n```\n\nFrom the plot above, we can see that there is a seasonal pattern of passengers coming into the country yearly. Please note that to avoid anomalies in forecasting, we'll not be training on 2020 data due to the restrictions on travel from the COVID-19 global pandemic. \n\n```{r}\nggAcf(air_travel_ts,40)\ngglagplot(air_travel_ts, do.lines=FALSE, set.lags = c(12, 24, 36, 48))+\n  ggtitle(\"Air passenger arrivals to Incheon Airport (SK)\") \ndec2 <- decompose(air_travel_ts,type = c(\"additive\", \"multiplicative\"))\nplot(dec2)\n```\n\nThrough these graphs, we can see a string seasonal correlation. However, since the data is mutliplicative in nature, we may need to take the log of the data prior to differencing. \n\n```{r}\n#| code-fold: true\n\nlog(air_travel_ts) %>% diff() %>% ggtsdisplay()\nlog(air_travel_ts) %>% diff(12) %>% ggtsdisplay()\nlog(air_travel_ts) %>% diff() %>% diff(12) %>% ggtsdisplay()\n```\n\nFrom the ACF and PACF plots, we can see that the data is the most stationary when the original data is log transformed, first differenced, and seasonally differenced by month. From these plots, we can say that q = 2, p = 2,4, d = 1, Q = 1, and P = 1. \n\nIn order to find the best model, we'll run through mutliple models and find the ones with the lowest AIC and BIC score. \n\n### Determining the Model\n\n```{r}\n#| code-fold: true\n\n#write a function\nSARIMA.c=function(p1,p2,q1,q2,P1,P2,Q1,Q2,data){\n  \n  temp=c()\n  d=1\n  D=1\n  s=12\n  \n  i=1\n  temp= data.frame()\n  ls=matrix(rep(NA,9*35),nrow=35)\n  for (p in p1:p2)\n  {\n    for(q in q1:q2)\n    {\n      for(P in P1:P2)\n      {\n        for(Q in Q1:Q2)\n        {\n          if(p+d+q+P+D+Q<=9)\n          {\n            model<- Arima(data,order=c(p-1,d,q-1),seasonal=c(P-1,D,Q-1))\n            ls[i,]= c(p-1,d,q-1,P-1,D,Q-1,model$aic,model$bic,model$aicc)\n            i=i+1\n          }\n        }\n      }\n    }\n  }\n  \n  temp= as.data.frame(ls)\n  names(temp)= c(\"p\",\"d\",\"q\",\"P\",\"D\",\"Q\",\"AIC\",\"BIC\",\"AICc\")\n  temp\n}\n\noutput=SARIMA.c(p1=1,p2=5,q1=1,q2=3,P1=1,P2=3,Q1=1,Q2=3,data=air_travel_ts)\nknitr::kable(output)\n\noutput[which.min(output$AIC),]\noutput[which.min(output$BIC),]\noutput[which.min(output$AICc),]\n```\n\nBased on the AIC, BIC, and AICc values, we'll go forward with the model ARIMA(0,1,2)x(0,1,1)[12]. Let's analyze this model for it's residuals and siginificant values.\n\n```{r}\n#| code-fold: true\n\nset.seed(123)\nmodel_output <- capture.output(sarima(air_travel_ts, 0,1,2,0,1,1,12))\ncat(model_output[28:60], model_output[length(model_output)], sep = \"\\n\") \n```\n\nThis model seems to be a goof fit for a number of reasons. Primarily, the ACF plot shows almost no correlation, indicating that the model has harnessed everything that left is white noise. This indicates a good model fit. Additionally, the Ljung-Box statistic shows almost no autocorrelation within the model. Lastly, all coefficients within the table are significant. \n\n### Fitting the Model and Forecasting\n\n```{r}\n#| code-fold: true\n\nfit <- Arima(air_travel_ts, order=c(0,1,2), seasonal=c(0,1,1))\nsummary(fit)\n```\n\n\n```{r}\n#| echo: false\nsarima.for(air_travel_ts, 60, 0,1,2,0,1,1,12)\n```\n\nOur forecast shows a positive upwards trend in international passenger arrivals into Incheon Airport, South Korea. Please note, this forecast shows five years into the future if the COVID-19 pandemic didn't cause any anomalies within air travel. However, even knowing that the actual data isn't the same, we can approximate that the travel industry would recover in a similar pattern, with a positive trend of people coming into Korea. Thus, this furthers the narrative of globalization, and specifically, Korean culture reaching outside its country's borders into the West. \n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"arma.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","theme":"minty","title":"ARMA and ARIMA Models"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}