{"title":"Data Visualization","markdown":{"yaml":{"title":"Data Visualization","bibliography":"intro_reference.bib"},"headingText":"KOF Globalization","containsRefs":false,"markdown":"\n\n```{r}\n#| echo: false\n#| warning: false\nlibrary(quantmod)\nlibrary(stringr)\nlibrary(tidyverse)\nlibrary(imputeTS)\nlibrary(vars)\nlibrary(forecast)\nlibrary(astsa) \nlibrary(xts)\nlibrary(tseries)\nlibrary(fpp2)\nlibrary(fma)\nlibrary(lubridate)\nlibrary(TSstudio)\nlibrary(tidyquant)\nlibrary(plotly)\nlibrary(ggplot2)\nlibrary(cowplot)\nlibrary(TSA)\n#install.packages(\"grDevices\")\n#library(grDevices)\nlibrary(fGarch) \nlibrary(dynlm)\nlibrary(dygraphs)\nlibrary(readxl)\nlibrary(dplyr)\n```\n\nData visualization serves the purpose of uncovering potential trends, identifying patterns, and detecting anomalies present in datasets. By transforming cleaned data into graphical representations, it enables a more intuitive understanding of complex information, aiding in data-driven decision-making processes. Below are the visualization for our datasets. \n\n\nThe KOF Globalization index quantifies globalization within a country through a multitude of lenses. We will be looking at the general globalization index values as well as technology, culture, and TV and Media, since it all correlates to sphere of music and music streaming in the modern world. \n\nThrough R, I cleaning the dataset from KOF and used Tableau to create interative global maps for each respective index system. \n```{r}\n#| warning: false\n#| code-fold: true\n\n\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(dplyr)\n\nglobal <- read_excel(\"raw_data/KOFGI_2022_public.xlsx\")\nglobal <- global %>%\n  select(code, country, year, KOFGI, KOFInGIdf, KOFInGIdj, KOFCuGIdf) %>%\n  drop_na(c(KOFGI, KOFInGIdf, KOFInGIdj, KOFCuGIdf))\n\nwrite.csv(global, \"cleaned_data/globalization.csv\", row.names=FALSE)\n```\n\nFrom this cleaned data, we can visualize the globalization index over time for general globalization as well as indexes specifc to culture and entertainment. \n\n*Please allow for the visualization to load when moving the slider as it handles a large amount of data*\n\n\n<div class='tableauPlaceholder' id='viz1696443390612' style='position: relative'><noscript><a href='#'><img alt='Dashboard 1 ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;KO&#47;KOFGlobalization&#47;Dashboard1&#47;1_rss.png' style='border: none' /></a></noscript><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' /> <param name='embed_code_version' value='3' /> <param name='site_root' value='' /><param name='name' value='KOFGlobalization&#47;Dashboard1' /><param name='tabs' value='no' /><param name='toolbar' value='yes' /><param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;KO&#47;KOFGlobalization&#47;Dashboard1&#47;1.png' /> <param name='animate_transition' value='yes' /><param name='display_static_image' value='yes' /><param name='display_spinner' value='yes' /><param name='display_overlay' value='yes' /><param name='display_count' value='yes' /><param name='language' value='en-US' /><param name='filter' value='publish=yes' /></object></div>\n<script type='text/javascript'>\nvar divElement = document.getElementById('viz1696443390612');\nvar vizElement = divElement.getElementsByTagName('object')[0];\nif ( divElement.offsetWidth > 800 ) { vizElement.style.width='1000px';vizElement.style.height='827px';} else if ( divElement.offsetWidth > 500 ) { vizElement.style.width='1000px';vizElement.style.height='827px';} else { vizElement.style.width='100%';vizElement.style.height='1527px';}\nvar scriptElement = document.createElement('script');\nscriptElement.src = 'https://public.tableau.com/javascripts/api/viz_v1.js';\nvizElement.parentNode.insertBefore(scriptElement, vizElement);</script>\n\nFrom the graphs, we can a gradual increase in the globalization index over the past 50 years. Specifically, North America, Western Europe, and Australia have the highest globalization indexes across all index types throughout the 50 years. Additionally, we can see that in 1990, Russia's globalization index was added, resulting in the world's largest populous countries to be added to the index. Once we get to 2000, we continue to see the highest globalization values in North America, Western Europe (specifically UK and France), and Australia, with new additions like South Korea and Japan with higher values. By 2020, the aforementioned countries have even higher index values, most in the 80's and 90's out of 100. China, Russia, Brazil, and India are also most notable countries with very high globalization values, especially in the technology category. \n\n## Record Label Stocks\nNext, in order to better understand globalization within the music industry, we will take a look at large record label stock prices over time. I chose the most popular record labels who house some of the largest musicians in the industry. \n\n- Universal Music Group Inc. (UMGP)\n- SONY Group Corporation (SONY)\n- HYBE Co. (352820.KS)\n- SM Entertainment (041510.KQ)\n- YG Entertainment (122870.KQ)\n- JYP Entertainment (035900.KQ)\n\nI used plotly in R to show this interactive line plot. \n\n```{r}\n#| warning: false \n#| code-fold: true\n\nlibrary(plotly)\nlibrary(quantmod)\n\noptions(\"getSymbols.warning4.0\"=FALSE)\noptions(\"getSymbols.yahoo.warning\"=FALSE)\n\ntickers = c(\"UMGP\", \"SONY\", \"352820.KS\", \"041510.KQ\", '122870.KQ', '035900.KQ')\n\nfor (i in tickers){\n  getSymbols(i, from = \"2000-01-01\", to = \"2023-11-01\")\n}\n\nUMGP <- data.frame(UMGP$UMGP.Adjusted)\nUMGP <- UMGP %>%\n  rownames_to_column(var = \"Date\") %>%\n  mutate(Date = as.Date(Date)) %>%\n  rename(Price = UMGP.Adjusted)\nwrite.csv(UMGP, \"raw_data/umgp_stock.csv\", row.names=FALSE)\n\nSONY <- data.frame(SONY$SONY.Adjusted)\nSONY <- SONY %>%\n  rownames_to_column(var = \"Date\") %>%\n  mutate(Date = as.Date(Date)) %>%\n  rename(Price = SONY.Adjusted)\nwrite.csv(SONY, \"raw_data/sony_stock.csv\", row.names=FALSE)\n\nHYBE <- data.frame(`352820.KS`$`352820.KS.Adjusted`)\nHYBE <- HYBE %>%\n  rownames_to_column(var = \"Date\") %>%\n  mutate(Date = as.Date(Date)) %>%\n  rename(Price = X352820.KS.Adjusted) %>%\n  mutate(Price = Price/1352.60)\nwrite.csv(HYBE, \"raw_data/hybe_stock.csv\", row.names=FALSE)\n\nSM <- data.frame(`041510.KQ`$`041510.KQ.Adjusted`)\nSM <- SM %>%\n  rownames_to_column(var = \"Date\") %>%\n  mutate(Date = as.Date(Date)) %>%\n  rename(Price = X041510.KQ.Adjusted) %>%\n  mutate(Price = Price/1352.60)\nwrite.csv(SM, \"raw_data/sm_stock.csv\", row.names=FALSE)\n\nYG <- data.frame(`122870.KQ`$`122870.KQ.Adjusted`)\nYG <- YG %>%\n  rownames_to_column(var = \"Date\") %>%\n  mutate(Date = as.Date(Date)) %>%\n  rename(Price = X122870.KQ.Adjusted) %>%\n  mutate(Price = Price/1352.60)\nwrite.csv(YG, \"raw_data/yg_stock.csv\", row.names=FALSE)\n\nJYP <- data.frame(`035900.KQ`$`035900.KQ.Adjusted`)\nJYP <- JYP %>%\n  rownames_to_column(var = \"Date\") %>%\n  mutate(Date = as.Date(Date)) %>%\n  rename(Price = X035900.KQ.Adjusted) %>%\n  mutate(Price = Price/1352.60)\nwrite.csv(JYP, \"raw_data/jyp_stock.csv\", row.names=FALSE)\n\nstock_dataframes <- list(UMGP, SONY, HYBE, SM, YG, JYP)\nstock_names <- list(\"UMGP\", \"SONY\", \"HYBE\", \"SM\", \"YG\", \"JYP\")\np <- plot_ly()\n\n# Add traces for each stock to the plot\nfor (i in 1:length(stock_dataframes)) {\n  stock_df <- stock_dataframes[[i]]\n  p <- add_trace(p, x = stock_df$Date, y = stock_df$Price, type = 'scatter', mode = 'lines', name = stock_names[i])\n}\n\n# Customize the layout if needed\np <- layout(p, title = \"Stock Prices of Music Record Label\", xaxis = list(title = \"Date\"), yaxis = list(title = \"Price (USD)\"))\n\n# Show the plot\np\n```\n\nFrom the line plot, we can analyze these record labels as they enter the market to today. Starting with the oldest public record label, SONY seems to have a seasonal downward trend from 2000 - 2001, however that quickly ends to a more irregular and constant movement. We can see a large spike again in the early 2022, possibly due to SONY's press release for the vison-s suv, a self driving car @SONYVisionSUV. Of the other stocks, a notable one to note is the introduction of HYBE Co. in late 2020. HYBE, a South Korean Entertainment company, founded by Bang Shi Hyuk, is notable for its creation of the current largest boy band in the industy, BTS. With their international Billboard Hot 100 #1 song, Dynamite, releasing in August of 2020, the band a stirred enough interest for the company's entrance in the market to be a success at $188 USD. The price reached a high in November of 2021 at $306 USD, most likely due to BTS's Artist of the Year award at the 2021 American Music Awards and their Grammy nomination. However, since that peak, the price has gone down significantly in June of 2022, likely a result of the company's largest artists, BTS, announcing a hiatus of group activities due to military enlistment @HYBEstock. Amonst the remaining tickers, we can a gradual positive trend with no seasonality and a slight spike around early 2022, as artists were announcing in person activities after the Covid-19 pandemic. Thus, we can see through these stock prices that while American record companies seem to a large and consistent history in the market, new companies like HYBE and SM from South Korea have started to take space in the public markets. \n\n## Billboard Charts: \nThe Billboard Hot 100 is a chart created by billboard used to rank the top 100 songs in the United States per week. In order to see the trends in musical globalization, I will be taking a look artists who acheived number 1's on the Billboard Hot 100 and the number of weeks those songs stayed on the chart from 2010 - 2021. I used Tableau to show this interactive bubble graph. \n```{r}\n#| warning: false \n#| code-fold: true\ncharts <- read_csv('cleaned_data/charts.csv')\ncharts <- charts %>%\n  filter(rank == 1) %>%\n  select(-`last-week`, -`peak-rank`)\n\nwrite.csv(charts, \"cleaned_data/number1_charts.csv\", row.names=FALSE)\n```\n\n<div class='tableauPlaceholder' id='viz1696456918116' style='position: relative'><noscript><a href='#'><img alt='Billboard Hot 100 Number 1 Artists per Month2010-2021 August 2012 ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;6R&#47;6R7N7WW4R&#47;1_rss.png' style='border: none' /></a></noscript><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' /> <param name='embed_code_version' value='3' /> <param name='path' value='shared&#47;6R7N7WW4R' /> <param name='toolbar' value='yes' /><param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;6R&#47;6R7N7WW4R&#47;1.png' /> <param name='animate_transition' value='yes' /><param name='display_static_image' value='yes' /><param name='display_spinner' value='yes' /><param name='display_overlay' value='yes' /><param name='display_count' value='yes' /><param name='language' value='en-US' /><param name='filter' value='publish=yes' /></object></div>\n<script type='text/javascript'>\nvar divElement = document.getElementById('viz1696456918116');\nvar vizElement = divElement.getElementsByTagName('object')[0];\nvizElement.style.width='100%';vizElement.style.height=(divElement.offsetWidth*0.75)+'px';\nvar scriptElement = document.createElement('script');\nscriptElement.src = 'https://public.tableau.com/javascripts/api/viz_v1.js';\nvizElement.parentNode.insertBefore(scriptElement, vizElement);</script>\n\nFrom this visualization we notice that first instance of a non-Western artist debuting at number 1 on the Billboard Hot 100 is in 2017 with Luis Fonsi, Daddy Yankee, and Justin Bieber with Despacito. The song stayed on the charts for 78 weeks, being song with the most weeks on the Billboard Hot 100 in this timeframe. The next non-Western artist would be BTS, as mentioned previously, with their song Dynamite, first debuting number one in September of 2020. BTS appears again in June 2021, with their song *Butter* which stayed on the charts for 15 weeks. Latin Artists Bad Bunny and J Balvin also made a debut on the charts at number 1 with the song *I Like It* along side Cardi B for a total of 12 weeks on the charts. Thus, we can see that after 2015, we saw an increaing number of number 1's from non-Western artists on the America charts, a sign of general positive feedback from the public regarding the globalization of music. \n\n```{r}\n#| warning: false \n#| code-fold: true\nselected_artists <- c(\"bts\", \"exo\", \"twice\", \"blackpink\", 'drake', \"beyoncé\", \"beyonce\", \"taylor swift\", \"harry styles\")\n\n# Create a regex pattern to match any of the selected artists\npattern <- paste0(\"\\\\b\", paste(selected_artists, collapse = \"\\\\b|\\\\b\"), \"\\\\b\")\n\n# Subset the dataframe based on selected artists\ncharts <- charts %>%\nmutate(artist = tolower(artist)) %>%\nfilter(str_detect(artist, pattern)) %>%\nmutate(artist = str_extract(artist, paste(selected_artists, collapse = \"|\")))\n\nwrite.csv(charts, \"cleaned_data/subset_artist_charts.csv\", row.names=FALSE)\n```\n\n<div class='tableauPlaceholder' id='viz1701574496100' style='position: relative'><noscript><a href='#'><img alt=' 2003 ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;bi&#47;billboard_17015744776020&#47;Sheet1&#47;1_rss.png' style='border: none' /></a></noscript><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' /> <param name='embed_code_version' value='3' /> <param name='site_root' value='' /><param name='name' value='billboard_17015744776020&#47;Sheet1' /><param name='tabs' value='no' /><param name='toolbar' value='yes' /><param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;bi&#47;billboard_17015744776020&#47;Sheet1&#47;1.png' /> <param name='animate_transition' value='yes' /><param name='display_static_image' value='yes' /><param name='display_spinner' value='yes' /><param name='display_overlay' value='yes' /><param name='display_count' value='yes' /><param name='language' value='en-US' /><param name='filter' value='publish=yes' /></object></div>\n<script type='text/javascript'>\nvar divElement = document.getElementById('viz1701574496100');\nvar vizElement = divElement.getElementsByTagName('object')[0];\nvizElement.style.width='100%';vizElement.style.height=(divElement.offsetWidth*0.75)+'px';\nvar scriptElement = document.createElement('script');\nscriptElement.src = 'https://public.tableau.com/javascripts/api/viz_v1.js';\nvizElement.parentNode.insertBefore(scriptElement, vizElement);</script>\n\nHere, we can clearly see that, in terms of the billboard charts, Taylor Swift and Drake dominate in terms of the quantity of songs on the chart per year. Additionally, the only KPOP artist of the four I've selected that has made it onto the Billboard Hot 100, as of 2021, was BTS. Other artists like Twice and Blackpink both had 2 etries on the charts in 2022 and 2023 combined. \n\n## Spotify Data \n\nWhen looking at popularity for all KPOP acts, we can see that throughout the past 10 years, BTS has maintained the highest popularity score, with BlackPink catching up in recent years. Comparatively, with the Western artists, we can see that Beyoncé has consistently been the most popular, with Drake, Taylor Swift, and Harry Styles reaching peaks around the same level in the past two years. \n\nWhen looking at musical characteristics, we can see that most characteristics between KPOP and Western artists are approximately the same, with the exception of energy, instrumentalness, liveness, loudness, and valence. We can see that in all these values, KPOP seems to have a higher average, indicating that larger, more powerful songs seems to be more common in KPOP than in Western music. \n\n::: {.panel-tabset}\n\n## Popularity\n```{r}\n#| code-fold: true\n#| warning: false\nspotify <- read.csv(\"cleaned_data/spotify_data_cleaned.csv\")\nspotify <- spotify %>%\n  select(artist_name, album_release_year, popularity) %>%\n  group_by(artist_name, album_release_year) %>%\n  summarise_at(vars(popularity), mean, na.rm = TRUE)\n\nspotify <- spotify %>%\n  mutate(album_release_year_numeric = as.numeric(as.character(album_release_year)))\n\n# Create a sequence of years from debut to 2023 for each artist\nyearly_data <- spotify %>%\n  group_by(artist_name) %>%\n  complete(album_release_year_numeric = full_seq(album_release_year_numeric, 1)) %>%\n  fill(album_release_year, .direction = \"up\") %>%\n  ungroup()\n\n# Step 3: Convert 'album_release_year_numeric' back to a factor\nyearly_data <- yearly_data %>%\n  mutate(album_release_year = as.factor(album_release_year_numeric)) %>%\n  select(-album_release_year_numeric) %>%\n  fill(popularity)\n\nwrite_csv(yearly_data, \"cleaned_data/artist_popularity_cleaned.csv\")\n\nplot <- plot_ly(yearly_data, x = ~album_release_year, y = ~popularity, color = ~artist_name, type = 'scatter', mode = 'lines')\n\n# Combine plot and layout\nplot <- layout(plot, title = \"Average Popularity Over Years by Artist\",\n               xaxis = list(title = \"Album Release Year\"),\n               yaxis = list(title = \"Popularity\"))\n\n# Show the plot\nplot\n```\n\n## Musical Characteristics\n```{r}\n#| eval: false\n#| echo: false\nspotify <- read.csv(\"cleaned_data/spotify_data_cleaned.csv\")\n\nlibrary(plotly)\n\n# Assuming your dataframe is named 'spotify_data'\n# Make sure to replace 'spotify_data' with the actual name of your dataframe\n\n# Define KPOP and Western artists\nkpop_artists <- c(\"BLACKPINK\", \"BTS\", \"EXO\", \"Twice\")\nwestern_artists <- c(\"Harry Styles\", \"Beyoncé\", \"Drake\", \"Taylor Swift\")\n\n# Group by artist type and calculate the average for each musical characteristic\navg_characteristics <- spotify %>%\n  mutate(artist_type = ifelse(artist_name %in% kpop_artists, \"KPOP\", \"Western\")) %>%\n  group_by(artist_type) %>%\n  summarise(across(starts_with(\"instrumentalness\"), mean, na.rm = TRUE),\n            across(starts_with(\"valence\"), mean, na.rm = TRUE),\n            across(starts_with(\"danceability\"), mean, na.rm = TRUE),\n            across(starts_with(\"energy\"), mean, na.rm = TRUE),\n            across(starts_with(\"loudness\"), mean, na.rm = TRUE),\n            across(starts_with(\"speechiness\"), mean, na.rm = TRUE),\n            across(starts_with(\"acousticness\"), mean, na.rm = TRUE),\n            across(starts_with(\"liveness\"), mean, na.rm = TRUE),\n            across(starts_with(\"tempo\"), mean, na.rm = TRUE))\n\n# Reshape data for plotting\navg_characteristics_long <- pivot_longer(avg_characteristics, \n                                         cols = -artist_type,\n                                         names_to = \"musical_characteristic\",\n                                         values_to = \"average_value\")\n\nwrite_csv(avg_characteristics_long, \"cleaned_data/artist_avg_characteristics.csv\")\n```\n\n```{r}\n#| code-fold: true\navg_characteristics_long <- read.csv(\"cleaned_data/artist_avg_characteristics.csv\")\n\nggplot(avg_characteristics_long, aes(x = average_value, y =artist_type, \n                                     fill = artist_type)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  facet_wrap(~ musical_characteristic, scales = \"free_x\", nrow = 3, ncol = 3) +\n  labs(title = \"Average Musical Characteristics by Artist Type\",\n       x = \"Average Value\",\n       y = \"Musical Characteristic\") +\n  geom_text(aes(label = round(average_value, 2)), \n            position = position_dodge2(width = 0.9), hjust = 1.2) +\n  theme_minimal() +\n  theme(axis.text.y = element_text(angle = 0, hjust = 1, vjust = -1))\n\n```\n\n:::\n\n\n## Korean Tourism\n\nFrom the 3 visualizations below we can note the following. There appears to be seasonality within the data, however, we'll cover that more in the [EDA](http://shriya-chinthak.georgetown.domains/DSAN_5600/eda.html) section. For our density plot and boxplot, we can note that there seems to have been more flights in our dataset with fewer passengers, however, the overall trend points to greater travel into the nation. \n\n```{r}\n#| code-fold: true\n#| warning: false\npassengers <- read.csv(\"cleaned_data/air_passengers_cleaned.csv\")\n\npassengers <- passengers %>%\n  mutate(date = as.Date(date))\n\nline_plot <- ggplot(passengers, aes(x = date, y = Passengers)) +\n  geom_line() +\n  labs(title = \"Air Passengers Over Time\",\n       x = \"Year-Month\",\n       y = \"Number of Passengers\")\n\n# Create the histogram\ndensity_plot <- ggplot(passengers, aes(x = Passengers)) +\n  geom_density(fill = \"lightblue\", color = \"black\", alpha = 0.7) +\n  labs(title = \"Density Plot of Air Passengers\",\n       x = \"Number of Passengers\",\n       y = \"Density\")\n\n# Create the box plot\nbox_plot <- ggplot(passengers, aes(x = 1, y = Passengers)) +\n  geom_boxplot(fill = \"lightblue\", color = \"black\", alpha = 0.7) +\n  labs(title = \"Box Plot of Air Passengers\",\n       x = \"\",\n       y = \"Number of Passengers\") +\n  theme(axis.title.x=element_blank(),\n        axis.text.x=element_blank(),\n        axis.ticks.x=element_blank())\n\n\nfacet_wrap_plot <- cowplot::plot_grid(line_plot, density_plot, box_plot)\n\n# Display the facet wrap\nprint(facet_wrap_plot)\n```","srcMarkdownNoYaml":"\n\n```{r}\n#| echo: false\n#| warning: false\nlibrary(quantmod)\nlibrary(stringr)\nlibrary(tidyverse)\nlibrary(imputeTS)\nlibrary(vars)\nlibrary(forecast)\nlibrary(astsa) \nlibrary(xts)\nlibrary(tseries)\nlibrary(fpp2)\nlibrary(fma)\nlibrary(lubridate)\nlibrary(TSstudio)\nlibrary(tidyquant)\nlibrary(plotly)\nlibrary(ggplot2)\nlibrary(cowplot)\nlibrary(TSA)\n#install.packages(\"grDevices\")\n#library(grDevices)\nlibrary(fGarch) \nlibrary(dynlm)\nlibrary(dygraphs)\nlibrary(readxl)\nlibrary(dplyr)\n```\n\nData visualization serves the purpose of uncovering potential trends, identifying patterns, and detecting anomalies present in datasets. By transforming cleaned data into graphical representations, it enables a more intuitive understanding of complex information, aiding in data-driven decision-making processes. Below are the visualization for our datasets. \n\n\n## KOF Globalization\nThe KOF Globalization index quantifies globalization within a country through a multitude of lenses. We will be looking at the general globalization index values as well as technology, culture, and TV and Media, since it all correlates to sphere of music and music streaming in the modern world. \n\nThrough R, I cleaning the dataset from KOF and used Tableau to create interative global maps for each respective index system. \n```{r}\n#| warning: false\n#| code-fold: true\n\n\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(dplyr)\n\nglobal <- read_excel(\"raw_data/KOFGI_2022_public.xlsx\")\nglobal <- global %>%\n  select(code, country, year, KOFGI, KOFInGIdf, KOFInGIdj, KOFCuGIdf) %>%\n  drop_na(c(KOFGI, KOFInGIdf, KOFInGIdj, KOFCuGIdf))\n\nwrite.csv(global, \"cleaned_data/globalization.csv\", row.names=FALSE)\n```\n\nFrom this cleaned data, we can visualize the globalization index over time for general globalization as well as indexes specifc to culture and entertainment. \n\n*Please allow for the visualization to load when moving the slider as it handles a large amount of data*\n\n\n<div class='tableauPlaceholder' id='viz1696443390612' style='position: relative'><noscript><a href='#'><img alt='Dashboard 1 ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;KO&#47;KOFGlobalization&#47;Dashboard1&#47;1_rss.png' style='border: none' /></a></noscript><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' /> <param name='embed_code_version' value='3' /> <param name='site_root' value='' /><param name='name' value='KOFGlobalization&#47;Dashboard1' /><param name='tabs' value='no' /><param name='toolbar' value='yes' /><param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;KO&#47;KOFGlobalization&#47;Dashboard1&#47;1.png' /> <param name='animate_transition' value='yes' /><param name='display_static_image' value='yes' /><param name='display_spinner' value='yes' /><param name='display_overlay' value='yes' /><param name='display_count' value='yes' /><param name='language' value='en-US' /><param name='filter' value='publish=yes' /></object></div>\n<script type='text/javascript'>\nvar divElement = document.getElementById('viz1696443390612');\nvar vizElement = divElement.getElementsByTagName('object')[0];\nif ( divElement.offsetWidth > 800 ) { vizElement.style.width='1000px';vizElement.style.height='827px';} else if ( divElement.offsetWidth > 500 ) { vizElement.style.width='1000px';vizElement.style.height='827px';} else { vizElement.style.width='100%';vizElement.style.height='1527px';}\nvar scriptElement = document.createElement('script');\nscriptElement.src = 'https://public.tableau.com/javascripts/api/viz_v1.js';\nvizElement.parentNode.insertBefore(scriptElement, vizElement);</script>\n\nFrom the graphs, we can a gradual increase in the globalization index over the past 50 years. Specifically, North America, Western Europe, and Australia have the highest globalization indexes across all index types throughout the 50 years. Additionally, we can see that in 1990, Russia's globalization index was added, resulting in the world's largest populous countries to be added to the index. Once we get to 2000, we continue to see the highest globalization values in North America, Western Europe (specifically UK and France), and Australia, with new additions like South Korea and Japan with higher values. By 2020, the aforementioned countries have even higher index values, most in the 80's and 90's out of 100. China, Russia, Brazil, and India are also most notable countries with very high globalization values, especially in the technology category. \n\n## Record Label Stocks\nNext, in order to better understand globalization within the music industry, we will take a look at large record label stock prices over time. I chose the most popular record labels who house some of the largest musicians in the industry. \n\n- Universal Music Group Inc. (UMGP)\n- SONY Group Corporation (SONY)\n- HYBE Co. (352820.KS)\n- SM Entertainment (041510.KQ)\n- YG Entertainment (122870.KQ)\n- JYP Entertainment (035900.KQ)\n\nI used plotly in R to show this interactive line plot. \n\n```{r}\n#| warning: false \n#| code-fold: true\n\nlibrary(plotly)\nlibrary(quantmod)\n\noptions(\"getSymbols.warning4.0\"=FALSE)\noptions(\"getSymbols.yahoo.warning\"=FALSE)\n\ntickers = c(\"UMGP\", \"SONY\", \"352820.KS\", \"041510.KQ\", '122870.KQ', '035900.KQ')\n\nfor (i in tickers){\n  getSymbols(i, from = \"2000-01-01\", to = \"2023-11-01\")\n}\n\nUMGP <- data.frame(UMGP$UMGP.Adjusted)\nUMGP <- UMGP %>%\n  rownames_to_column(var = \"Date\") %>%\n  mutate(Date = as.Date(Date)) %>%\n  rename(Price = UMGP.Adjusted)\nwrite.csv(UMGP, \"raw_data/umgp_stock.csv\", row.names=FALSE)\n\nSONY <- data.frame(SONY$SONY.Adjusted)\nSONY <- SONY %>%\n  rownames_to_column(var = \"Date\") %>%\n  mutate(Date = as.Date(Date)) %>%\n  rename(Price = SONY.Adjusted)\nwrite.csv(SONY, \"raw_data/sony_stock.csv\", row.names=FALSE)\n\nHYBE <- data.frame(`352820.KS`$`352820.KS.Adjusted`)\nHYBE <- HYBE %>%\n  rownames_to_column(var = \"Date\") %>%\n  mutate(Date = as.Date(Date)) %>%\n  rename(Price = X352820.KS.Adjusted) %>%\n  mutate(Price = Price/1352.60)\nwrite.csv(HYBE, \"raw_data/hybe_stock.csv\", row.names=FALSE)\n\nSM <- data.frame(`041510.KQ`$`041510.KQ.Adjusted`)\nSM <- SM %>%\n  rownames_to_column(var = \"Date\") %>%\n  mutate(Date = as.Date(Date)) %>%\n  rename(Price = X041510.KQ.Adjusted) %>%\n  mutate(Price = Price/1352.60)\nwrite.csv(SM, \"raw_data/sm_stock.csv\", row.names=FALSE)\n\nYG <- data.frame(`122870.KQ`$`122870.KQ.Adjusted`)\nYG <- YG %>%\n  rownames_to_column(var = \"Date\") %>%\n  mutate(Date = as.Date(Date)) %>%\n  rename(Price = X122870.KQ.Adjusted) %>%\n  mutate(Price = Price/1352.60)\nwrite.csv(YG, \"raw_data/yg_stock.csv\", row.names=FALSE)\n\nJYP <- data.frame(`035900.KQ`$`035900.KQ.Adjusted`)\nJYP <- JYP %>%\n  rownames_to_column(var = \"Date\") %>%\n  mutate(Date = as.Date(Date)) %>%\n  rename(Price = X035900.KQ.Adjusted) %>%\n  mutate(Price = Price/1352.60)\nwrite.csv(JYP, \"raw_data/jyp_stock.csv\", row.names=FALSE)\n\nstock_dataframes <- list(UMGP, SONY, HYBE, SM, YG, JYP)\nstock_names <- list(\"UMGP\", \"SONY\", \"HYBE\", \"SM\", \"YG\", \"JYP\")\np <- plot_ly()\n\n# Add traces for each stock to the plot\nfor (i in 1:length(stock_dataframes)) {\n  stock_df <- stock_dataframes[[i]]\n  p <- add_trace(p, x = stock_df$Date, y = stock_df$Price, type = 'scatter', mode = 'lines', name = stock_names[i])\n}\n\n# Customize the layout if needed\np <- layout(p, title = \"Stock Prices of Music Record Label\", xaxis = list(title = \"Date\"), yaxis = list(title = \"Price (USD)\"))\n\n# Show the plot\np\n```\n\nFrom the line plot, we can analyze these record labels as they enter the market to today. Starting with the oldest public record label, SONY seems to have a seasonal downward trend from 2000 - 2001, however that quickly ends to a more irregular and constant movement. We can see a large spike again in the early 2022, possibly due to SONY's press release for the vison-s suv, a self driving car @SONYVisionSUV. Of the other stocks, a notable one to note is the introduction of HYBE Co. in late 2020. HYBE, a South Korean Entertainment company, founded by Bang Shi Hyuk, is notable for its creation of the current largest boy band in the industy, BTS. With their international Billboard Hot 100 #1 song, Dynamite, releasing in August of 2020, the band a stirred enough interest for the company's entrance in the market to be a success at $188 USD. The price reached a high in November of 2021 at $306 USD, most likely due to BTS's Artist of the Year award at the 2021 American Music Awards and their Grammy nomination. However, since that peak, the price has gone down significantly in June of 2022, likely a result of the company's largest artists, BTS, announcing a hiatus of group activities due to military enlistment @HYBEstock. Amonst the remaining tickers, we can a gradual positive trend with no seasonality and a slight spike around early 2022, as artists were announcing in person activities after the Covid-19 pandemic. Thus, we can see through these stock prices that while American record companies seem to a large and consistent history in the market, new companies like HYBE and SM from South Korea have started to take space in the public markets. \n\n## Billboard Charts: \nThe Billboard Hot 100 is a chart created by billboard used to rank the top 100 songs in the United States per week. In order to see the trends in musical globalization, I will be taking a look artists who acheived number 1's on the Billboard Hot 100 and the number of weeks those songs stayed on the chart from 2010 - 2021. I used Tableau to show this interactive bubble graph. \n```{r}\n#| warning: false \n#| code-fold: true\ncharts <- read_csv('cleaned_data/charts.csv')\ncharts <- charts %>%\n  filter(rank == 1) %>%\n  select(-`last-week`, -`peak-rank`)\n\nwrite.csv(charts, \"cleaned_data/number1_charts.csv\", row.names=FALSE)\n```\n\n<div class='tableauPlaceholder' id='viz1696456918116' style='position: relative'><noscript><a href='#'><img alt='Billboard Hot 100 Number 1 Artists per Month2010-2021 August 2012 ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;6R&#47;6R7N7WW4R&#47;1_rss.png' style='border: none' /></a></noscript><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' /> <param name='embed_code_version' value='3' /> <param name='path' value='shared&#47;6R7N7WW4R' /> <param name='toolbar' value='yes' /><param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;6R&#47;6R7N7WW4R&#47;1.png' /> <param name='animate_transition' value='yes' /><param name='display_static_image' value='yes' /><param name='display_spinner' value='yes' /><param name='display_overlay' value='yes' /><param name='display_count' value='yes' /><param name='language' value='en-US' /><param name='filter' value='publish=yes' /></object></div>\n<script type='text/javascript'>\nvar divElement = document.getElementById('viz1696456918116');\nvar vizElement = divElement.getElementsByTagName('object')[0];\nvizElement.style.width='100%';vizElement.style.height=(divElement.offsetWidth*0.75)+'px';\nvar scriptElement = document.createElement('script');\nscriptElement.src = 'https://public.tableau.com/javascripts/api/viz_v1.js';\nvizElement.parentNode.insertBefore(scriptElement, vizElement);</script>\n\nFrom this visualization we notice that first instance of a non-Western artist debuting at number 1 on the Billboard Hot 100 is in 2017 with Luis Fonsi, Daddy Yankee, and Justin Bieber with Despacito. The song stayed on the charts for 78 weeks, being song with the most weeks on the Billboard Hot 100 in this timeframe. The next non-Western artist would be BTS, as mentioned previously, with their song Dynamite, first debuting number one in September of 2020. BTS appears again in June 2021, with their song *Butter* which stayed on the charts for 15 weeks. Latin Artists Bad Bunny and J Balvin also made a debut on the charts at number 1 with the song *I Like It* along side Cardi B for a total of 12 weeks on the charts. Thus, we can see that after 2015, we saw an increaing number of number 1's from non-Western artists on the America charts, a sign of general positive feedback from the public regarding the globalization of music. \n\n```{r}\n#| warning: false \n#| code-fold: true\nselected_artists <- c(\"bts\", \"exo\", \"twice\", \"blackpink\", 'drake', \"beyoncé\", \"beyonce\", \"taylor swift\", \"harry styles\")\n\n# Create a regex pattern to match any of the selected artists\npattern <- paste0(\"\\\\b\", paste(selected_artists, collapse = \"\\\\b|\\\\b\"), \"\\\\b\")\n\n# Subset the dataframe based on selected artists\ncharts <- charts %>%\nmutate(artist = tolower(artist)) %>%\nfilter(str_detect(artist, pattern)) %>%\nmutate(artist = str_extract(artist, paste(selected_artists, collapse = \"|\")))\n\nwrite.csv(charts, \"cleaned_data/subset_artist_charts.csv\", row.names=FALSE)\n```\n\n<div class='tableauPlaceholder' id='viz1701574496100' style='position: relative'><noscript><a href='#'><img alt=' 2003 ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;bi&#47;billboard_17015744776020&#47;Sheet1&#47;1_rss.png' style='border: none' /></a></noscript><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' /> <param name='embed_code_version' value='3' /> <param name='site_root' value='' /><param name='name' value='billboard_17015744776020&#47;Sheet1' /><param name='tabs' value='no' /><param name='toolbar' value='yes' /><param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;bi&#47;billboard_17015744776020&#47;Sheet1&#47;1.png' /> <param name='animate_transition' value='yes' /><param name='display_static_image' value='yes' /><param name='display_spinner' value='yes' /><param name='display_overlay' value='yes' /><param name='display_count' value='yes' /><param name='language' value='en-US' /><param name='filter' value='publish=yes' /></object></div>\n<script type='text/javascript'>\nvar divElement = document.getElementById('viz1701574496100');\nvar vizElement = divElement.getElementsByTagName('object')[0];\nvizElement.style.width='100%';vizElement.style.height=(divElement.offsetWidth*0.75)+'px';\nvar scriptElement = document.createElement('script');\nscriptElement.src = 'https://public.tableau.com/javascripts/api/viz_v1.js';\nvizElement.parentNode.insertBefore(scriptElement, vizElement);</script>\n\nHere, we can clearly see that, in terms of the billboard charts, Taylor Swift and Drake dominate in terms of the quantity of songs on the chart per year. Additionally, the only KPOP artist of the four I've selected that has made it onto the Billboard Hot 100, as of 2021, was BTS. Other artists like Twice and Blackpink both had 2 etries on the charts in 2022 and 2023 combined. \n\n## Spotify Data \n\nWhen looking at popularity for all KPOP acts, we can see that throughout the past 10 years, BTS has maintained the highest popularity score, with BlackPink catching up in recent years. Comparatively, with the Western artists, we can see that Beyoncé has consistently been the most popular, with Drake, Taylor Swift, and Harry Styles reaching peaks around the same level in the past two years. \n\nWhen looking at musical characteristics, we can see that most characteristics between KPOP and Western artists are approximately the same, with the exception of energy, instrumentalness, liveness, loudness, and valence. We can see that in all these values, KPOP seems to have a higher average, indicating that larger, more powerful songs seems to be more common in KPOP than in Western music. \n\n::: {.panel-tabset}\n\n## Popularity\n```{r}\n#| code-fold: true\n#| warning: false\nspotify <- read.csv(\"cleaned_data/spotify_data_cleaned.csv\")\nspotify <- spotify %>%\n  select(artist_name, album_release_year, popularity) %>%\n  group_by(artist_name, album_release_year) %>%\n  summarise_at(vars(popularity), mean, na.rm = TRUE)\n\nspotify <- spotify %>%\n  mutate(album_release_year_numeric = as.numeric(as.character(album_release_year)))\n\n# Create a sequence of years from debut to 2023 for each artist\nyearly_data <- spotify %>%\n  group_by(artist_name) %>%\n  complete(album_release_year_numeric = full_seq(album_release_year_numeric, 1)) %>%\n  fill(album_release_year, .direction = \"up\") %>%\n  ungroup()\n\n# Step 3: Convert 'album_release_year_numeric' back to a factor\nyearly_data <- yearly_data %>%\n  mutate(album_release_year = as.factor(album_release_year_numeric)) %>%\n  select(-album_release_year_numeric) %>%\n  fill(popularity)\n\nwrite_csv(yearly_data, \"cleaned_data/artist_popularity_cleaned.csv\")\n\nplot <- plot_ly(yearly_data, x = ~album_release_year, y = ~popularity, color = ~artist_name, type = 'scatter', mode = 'lines')\n\n# Combine plot and layout\nplot <- layout(plot, title = \"Average Popularity Over Years by Artist\",\n               xaxis = list(title = \"Album Release Year\"),\n               yaxis = list(title = \"Popularity\"))\n\n# Show the plot\nplot\n```\n\n## Musical Characteristics\n```{r}\n#| eval: false\n#| echo: false\nspotify <- read.csv(\"cleaned_data/spotify_data_cleaned.csv\")\n\nlibrary(plotly)\n\n# Assuming your dataframe is named 'spotify_data'\n# Make sure to replace 'spotify_data' with the actual name of your dataframe\n\n# Define KPOP and Western artists\nkpop_artists <- c(\"BLACKPINK\", \"BTS\", \"EXO\", \"Twice\")\nwestern_artists <- c(\"Harry Styles\", \"Beyoncé\", \"Drake\", \"Taylor Swift\")\n\n# Group by artist type and calculate the average for each musical characteristic\navg_characteristics <- spotify %>%\n  mutate(artist_type = ifelse(artist_name %in% kpop_artists, \"KPOP\", \"Western\")) %>%\n  group_by(artist_type) %>%\n  summarise(across(starts_with(\"instrumentalness\"), mean, na.rm = TRUE),\n            across(starts_with(\"valence\"), mean, na.rm = TRUE),\n            across(starts_with(\"danceability\"), mean, na.rm = TRUE),\n            across(starts_with(\"energy\"), mean, na.rm = TRUE),\n            across(starts_with(\"loudness\"), mean, na.rm = TRUE),\n            across(starts_with(\"speechiness\"), mean, na.rm = TRUE),\n            across(starts_with(\"acousticness\"), mean, na.rm = TRUE),\n            across(starts_with(\"liveness\"), mean, na.rm = TRUE),\n            across(starts_with(\"tempo\"), mean, na.rm = TRUE))\n\n# Reshape data for plotting\navg_characteristics_long <- pivot_longer(avg_characteristics, \n                                         cols = -artist_type,\n                                         names_to = \"musical_characteristic\",\n                                         values_to = \"average_value\")\n\nwrite_csv(avg_characteristics_long, \"cleaned_data/artist_avg_characteristics.csv\")\n```\n\n```{r}\n#| code-fold: true\navg_characteristics_long <- read.csv(\"cleaned_data/artist_avg_characteristics.csv\")\n\nggplot(avg_characteristics_long, aes(x = average_value, y =artist_type, \n                                     fill = artist_type)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  facet_wrap(~ musical_characteristic, scales = \"free_x\", nrow = 3, ncol = 3) +\n  labs(title = \"Average Musical Characteristics by Artist Type\",\n       x = \"Average Value\",\n       y = \"Musical Characteristic\") +\n  geom_text(aes(label = round(average_value, 2)), \n            position = position_dodge2(width = 0.9), hjust = 1.2) +\n  theme_minimal() +\n  theme(axis.text.y = element_text(angle = 0, hjust = 1, vjust = -1))\n\n```\n\n:::\n\n\n## Korean Tourism\n\nFrom the 3 visualizations below we can note the following. There appears to be seasonality within the data, however, we'll cover that more in the [EDA](http://shriya-chinthak.georgetown.domains/DSAN_5600/eda.html) section. For our density plot and boxplot, we can note that there seems to have been more flights in our dataset with fewer passengers, however, the overall trend points to greater travel into the nation. \n\n```{r}\n#| code-fold: true\n#| warning: false\npassengers <- read.csv(\"cleaned_data/air_passengers_cleaned.csv\")\n\npassengers <- passengers %>%\n  mutate(date = as.Date(date))\n\nline_plot <- ggplot(passengers, aes(x = date, y = Passengers)) +\n  geom_line() +\n  labs(title = \"Air Passengers Over Time\",\n       x = \"Year-Month\",\n       y = \"Number of Passengers\")\n\n# Create the histogram\ndensity_plot <- ggplot(passengers, aes(x = Passengers)) +\n  geom_density(fill = \"lightblue\", color = \"black\", alpha = 0.7) +\n  labs(title = \"Density Plot of Air Passengers\",\n       x = \"Number of Passengers\",\n       y = \"Density\")\n\n# Create the box plot\nbox_plot <- ggplot(passengers, aes(x = 1, y = Passengers)) +\n  geom_boxplot(fill = \"lightblue\", color = \"black\", alpha = 0.7) +\n  labs(title = \"Box Plot of Air Passengers\",\n       x = \"\",\n       y = \"Number of Passengers\") +\n  theme(axis.title.x=element_blank(),\n        axis.text.x=element_blank(),\n        axis.ticks.x=element_blank())\n\n\nfacet_wrap_plot <- cowplot::plot_grid(line_plot, density_plot, box_plot)\n\n# Display the facet wrap\nprint(facet_wrap_plot)\n```"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"data-visualization.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","theme":"minty","title":"Data Visualization","bibliography":["intro_reference.bib"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}