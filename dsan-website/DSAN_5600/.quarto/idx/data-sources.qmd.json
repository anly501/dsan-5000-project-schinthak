{"title":"Data Sources","markdown":{"yaml":{"title":"Data Sources"},"headingText":"Data Files","containsRefs":false,"markdown":"\n\n```{css, echo = FALSE}\n.justify {\ntext-align: justify !important;\n}\n\n\n.boxes {\nborder: 1.0px solid #87c8b5;\npadding: 15px;\nfont-size: 18px;\nbackground-color: #f9f9f9;\nmargin: 20px 0px 20px 0px;\nborder-radius: 10px;\n}\n```\n\n```{css, echo=FALSE}\n.custom-border {\n  border: 3px solid #78c2ae; /* Minty color, adjust as needed */\n  padding: 2px; /* Adjust padding as needed */\n}\n\n.callout-tip {\n  background-color: #f9f9f9;\n  color: #5a5a5a\n}\n```\n\n```{r}\n#| echo: false\nx <- 1\n```\n\nIn order to gain a greater understanding of the larger effect KPOP has on the Western music industry, we will need to analyze a variety of sources. The sources we'll take a look at are a quantitative measure of musical characteristics from the Spotify API, music charting data from the Billboard Hot 100, stock data of the record lables attributed to each of the 8 artists we'll be analyzing, the KOF Swiss Economic Institute's globalization index, and inboud passenger statistics of international flights into South Korea from the Korean Tourism Organization. \n\n::: {.callout-tip}\n\nTo view the raw data and cleaned data, please navigate to my Github linked under to tab titled Code. \n\n*Please note that data pulled from APIs like Spotify data will be archived to Github based on the last update of this sight. For the most up to date data, we recommend using the API code below*\n:::\n\n\n---\n\n# Streaming \n\n:::: {.columns}\n\n::: {.column width=\"30%\"}\n\n![](images/spotify_icon.png){fig-align='center'}\n\n:::\n\n::: {.column width=\"5%\"}\n<!-- empty column to create gap -->\n:::\n\n::: {.column width=\"65%\"}\n\nLeveraging the capabilities of the Spotify API, I intend to conduct a comprehensive analysis of eight artists, spanning both KPOP and Western genres, by tapping into various streaming data, including discography details and an in-depth examination of musical components. This exploration involves scrutinizing factors such as tempo, key signatures, danceability, energy, and acousticness to discern similarities and differences in the musical characteristics of KPOP and Western artists. \n\nAdditionally, the incorporation of Spotify's popularity score offers a holistic view of an artist's overall impact, allowing for the identification of their most popular tracks and facilitating a comparative assessment between the two genres on a global scale. The popularity score becomes a crucial metric for gauging each artist's reach and influence, helping unveil trends and preferences in the dynamic landscape of global music consumption. I intend to use the popularity score to determine which songs between both KPOP and the Western artists contribute to the global popularity and the future of popular music. \n:::\n\n::::\n\n**NOTE**: The code used for the remainder of anaylsis uses a popularity index created by Spotify. However, due to Spotify's new regulations on the public information provided through their API, popularity is no longer accessible for all songs, just an artist's top 10 songs. Thus, in order to continue with analysis, I needed to exprapolate the blank poplarity values through regression. I trained the model on the existing popularity scores and then predicted the remaining values. In the future, I would like the find an alternatibve metric to measure popularity of every song. \n\n```{r}\n#| echo: false\n#| warning: false\n\nlibrary(ggplot2)\nlibrary(knitr)\nlibrary(spotifyr)\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(plotly)\n\nSys.setenv(SPOTIFY_CLIENT_ID = \"48875e31f589401f83c6bd43005d94f7\")\nSys.setenv(SPOTIFY_CLIENT_SECRET = \"d215e4ea690d4b9b9c1c5e0afbb113a5\")\n```\n\n```{r}\n#| warning: false\n#| code-fold: true\n#| code-summary: \"Code to gather Spotify Data\"\n\n\n#The following commented lines are the popularity index gathered through Python. The remainder of the code is in R:\n#______________________________________________________\n# import spotipy\n# from spotipy.oauth2 import SpotifyClientCredentials\n# import pandas as pd\n\n# client_id = \"48875e31f589401f83c6bd43005d94f7\"\n# client_secret = \"d215e4ea690d4b9b9c1c5e0afbb113a5\"\n\n# # Authenticate with Spotify API\n# sp = spotipy.Spotify(client_credentials_manager=SpotifyClientCredentials(client_id=client_id, client_secret=client_secret))\n\n# artists = [\"Drake\", \"Beyonce\", \"Harry Styles\", \"Taylor Swift\", \"Twice\", \"BTS\", \"EXO\", \"BlackPink\"]\n\n# # Function to get combined data for multiple artists\n# def get_combined_artists_data(artist_names):\n#     combined_data = pd.DataFrame()\n\n#     for artist_name in artist_names:\n        \n#         top_tracks = sp.artist_top_tracks(sp.search(q=artist_name, type=\"artist\")[\"artists\"][\"items\"][0][\"id\"])[\"tracks\"]\n        \n#         # Extract relevant track information\n#         track_data = pd.DataFrame({\n#             \"artist_name\": [artist_name] * len(top_tracks),\n#             \"track_name\": [track[\"name\"] for track in top_tracks],\n#             \"track_id\": [track[\"id\"] for track in top_tracks],\n#             \"popularity\": [track[\"popularity\"] for track in top_tracks],\n#         })\n        \n#         # Combine data for each artist\n#         combined_data = pd.concat([combined_data, track_data], ignore_index=True)\n\n#     return combined_data\n\n# # Example usage\n# combined_artists_df = get_combined_artists_data(artists)\n# print(combined_artists_df)\n\n# combined_artists_df.to_csv(\"raw_data/artists_top_song_popularity.csv\")\n\naccess_token <- get_spotify_access_token()\nartists <- c(\"Drake\", \"Beyonce\", \"Harry Styles\", \"Taylor Swift\", \"Twice\", \"BTS\", \"EXO\", \"BlackPink\")\n\nget_combined_artists_data <- function(artist_names) {\n  combined_data <- data.frame()\n  \n  for (artist_name in artist_names) {\n    artist_data <- get_artist_audio_features(artist_name)\n    \n    selected_columns <- c(\"artist_name\", \"instrumentalness\", \"valence\", \"danceability\",\n                           \"energy\", \"loudness\", \"speechiness\", \"acousticness\",\n                           \"liveness\", \"tempo\", \"track_name\", \"track_id\", \"album_name\",\n                           \"album_release_year\", \"album_release_date\")\n    \n    artist_df <- data.frame(artist_data[selected_columns])\n    \n    colnames(artist_df) <- c(\"artist_name\", \"instrumentalness\", \"valence\", \"danceability\",\n                             \"energy\", \"loudness\", \"speechiness\", \"acousticness\",\n                             \"liveness\", \"tempo\", \"track_name\", \"track_id\", \"album_name\",\n                             \"album_release_year\", \"album_release_date\")\n    \n    # Combine data for each artist\n    combined_data <- bind_rows(combined_data, artist_df)\n  }\n  \n  return(combined_data)\n}\n\nspotify_data <- get_combined_artists_data(artists)\n\nwrite.csv(spotify_data, \"raw_data/spotify_data_raw.csv\")\n\npopularity_data <- read.csv(\"raw_data/artists_top_song_popularity.csv\")\n\npopularity_data <- popularity_data %>%\nselect(\"track_id\", \"popularity\")\n\nspotify_data <- spotify_data %>%\nleft_join(popularity_data, by = 'track_id')\n\nmissing_rows <- is.na(spotify_data$popularity)\n\n# Separate the data into two sets: one with NAs in 'popularity' and one without NAs\ndata_with_na <- spotify_data[missing_rows, ]\ndata_without_na <- spotify_data[!missing_rows, ]\n\n# Build a linear regression model using rows without NAs\nmodel <- lm(popularity ~ instrumentalness + valence + danceability + energy + loudness + speechiness + acousticness + liveness + tempo, data = data_without_na)\n\n# Predict popularity for rows with NAs\npredicted_popularity <- predict(model, newdata = data_with_na)\n\npredicted_popularity <- pmax(1, pmin(predicted_popularity, 100))\n\n# Replace NAs with predicted values\nspotify_data$popularity[missing_rows] <- predicted_popularity\n\nspotify_data$popularity <- as.integer(spotify_data$popularity)\n\nspotify_data <- spotify_data[!(abs(spotify_data$popularity - mean(spotify_data$popularity)) > (3 * sd(spotify_data$popularity))), ]\n\nwrite.csv(spotify_data, \"cleaned_data/spotify_data_cleaned.csv\")\n```\n\n---\n\n# Music Charts\n![](billboard.jpeg){width=100% fig-align='center'}\n\nOne of the longest-running and most influential music charting services is the Billboard Chart. Since 1958, the Billboard charts have  documented the top 100 songs in the United States every week. This extensive and rich dataset spans over six decades, offering a unique lens through which to analyze the trajectory of popular music. By delving into this historical data, we gain valuable insights into the evolution of musical preferences, genre dynamics, and the global impact of the music industry.\n\nThe Billboard Chart serves as a time capsule, allowing us to trace the rise and fall of genres, observe the ebb and flow of musical trends, and investigate the longevity of artists and songs, unveiling the staying power of certain genres and the factors contributing to enduring success.\n\n---\n\n# Music Stock\n\n:::: {.columns}\n\n::: {.column width=\"65%\"}\n\nIn order to analyze artists in the West and in South Korea, we will also need to understand how they are a part of the financial side of the music industry. Thus, we will analyze the stock data of record label companies these artists fall under. For the West, Taylor Swift and Drake are signed to subsidiaries under University Music Group and Harry Styles and Beyonc√© are signed under subsidiaries of SONY. For the four chosen KPOP artists, BTS is signed under HYBE Co. labels, Blackpink is under YG Entertainment, EXO is under SM Entertainment, and Twice is under JYP Entertainment. \n\nUsing the **Quantmod** package, we can analyze the stock prices of several music record companies over a course of multiple years. This will allow us to identify specific trends within the music industry as well as interpret shareholder's opinions of globalization news as well as musical news and other world events throughout history.\n\n:::\n\n::: {.column width=\"5%\"}\n<!-- empty column to create gap -->\n:::\n\n::: {.column width=\"30%\"}\n\n![](images/yahoo.png){fig-align='center'}\n\n:::\n\n:::: \n\n---\n\n# Quantifying Globalization\n\n:::: {.columns}\n\n::: {.column width=\"40%\"}\n\n[![](images/kof.png){fig-align='center'}](https://kof.ethz.ch/en/forecasts-and-indicators/indicators/kof-globalisation-index.html)\n\n:::\n\n::: {.column width=\"5%\"}\n<!-- empty column to create gap -->\n:::\n\n::: {.column width=\"55%\"}\n\nThe Swiss Economic Institute's KOF Globalization index is a way to quantify globalization of a country. This metric was started in the 1970's as countries increasingly began to embrace globalization, which is defined as the process by which businesses or other organizations develop international influence or start operating on an international scale. However, this metric not only quanitfies globalization per country, but it also has mutliple indices for cultural, technological, and social globalization. This metric can be used in tandum with music trends in order to decipher if musical globalization is happening concurrently with general globalization.  \n\n:::\n\n:::: \n\n---\n\n# Korean Tourism\n[![](images/tourism.png){width=90% fig-align='center'}](https://www.statista.com/statistics/709116/south-korea-inbound-visitors/)\n\nIn order to expand upon globalization, we'll also use tourism statistics regarding inbound passengers to South Korea from international travel as a ways to measure interest in the country over time. I've gathered both yearly data of a count of those who visited South Korea purely for tourism as well as monthly data of international arrivals (as a number of passengers) into [Incheon Airport](https://www.airport.kr/co/en/cpr/statisticCategoryOfTimeSeries.do#none), the largest international airport in the country, on account of tourism. This tourist metric into South Korea can be used to explore globalization, but also understand the extent in which Korean culture is reaching people globally.  ","srcMarkdownNoYaml":"\n\n```{css, echo = FALSE}\n.justify {\ntext-align: justify !important;\n}\n\n\n.boxes {\nborder: 1.0px solid #87c8b5;\npadding: 15px;\nfont-size: 18px;\nbackground-color: #f9f9f9;\nmargin: 20px 0px 20px 0px;\nborder-radius: 10px;\n}\n```\n\n```{css, echo=FALSE}\n.custom-border {\n  border: 3px solid #78c2ae; /* Minty color, adjust as needed */\n  padding: 2px; /* Adjust padding as needed */\n}\n\n.callout-tip {\n  background-color: #f9f9f9;\n  color: #5a5a5a\n}\n```\n\n```{r}\n#| echo: false\nx <- 1\n```\n\nIn order to gain a greater understanding of the larger effect KPOP has on the Western music industry, we will need to analyze a variety of sources. The sources we'll take a look at are a quantitative measure of musical characteristics from the Spotify API, music charting data from the Billboard Hot 100, stock data of the record lables attributed to each of the 8 artists we'll be analyzing, the KOF Swiss Economic Institute's globalization index, and inboud passenger statistics of international flights into South Korea from the Korean Tourism Organization. \n\n::: {.callout-tip}\n## Data Files\n\nTo view the raw data and cleaned data, please navigate to my Github linked under to tab titled Code. \n\n*Please note that data pulled from APIs like Spotify data will be archived to Github based on the last update of this sight. For the most up to date data, we recommend using the API code below*\n:::\n\n\n---\n\n# Streaming \n\n:::: {.columns}\n\n::: {.column width=\"30%\"}\n\n![](images/spotify_icon.png){fig-align='center'}\n\n:::\n\n::: {.column width=\"5%\"}\n<!-- empty column to create gap -->\n:::\n\n::: {.column width=\"65%\"}\n\nLeveraging the capabilities of the Spotify API, I intend to conduct a comprehensive analysis of eight artists, spanning both KPOP and Western genres, by tapping into various streaming data, including discography details and an in-depth examination of musical components. This exploration involves scrutinizing factors such as tempo, key signatures, danceability, energy, and acousticness to discern similarities and differences in the musical characteristics of KPOP and Western artists. \n\nAdditionally, the incorporation of Spotify's popularity score offers a holistic view of an artist's overall impact, allowing for the identification of their most popular tracks and facilitating a comparative assessment between the two genres on a global scale. The popularity score becomes a crucial metric for gauging each artist's reach and influence, helping unveil trends and preferences in the dynamic landscape of global music consumption. I intend to use the popularity score to determine which songs between both KPOP and the Western artists contribute to the global popularity and the future of popular music. \n:::\n\n::::\n\n**NOTE**: The code used for the remainder of anaylsis uses a popularity index created by Spotify. However, due to Spotify's new regulations on the public information provided through their API, popularity is no longer accessible for all songs, just an artist's top 10 songs. Thus, in order to continue with analysis, I needed to exprapolate the blank poplarity values through regression. I trained the model on the existing popularity scores and then predicted the remaining values. In the future, I would like the find an alternatibve metric to measure popularity of every song. \n\n```{r}\n#| echo: false\n#| warning: false\n\nlibrary(ggplot2)\nlibrary(knitr)\nlibrary(spotifyr)\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(plotly)\n\nSys.setenv(SPOTIFY_CLIENT_ID = \"48875e31f589401f83c6bd43005d94f7\")\nSys.setenv(SPOTIFY_CLIENT_SECRET = \"d215e4ea690d4b9b9c1c5e0afbb113a5\")\n```\n\n```{r}\n#| warning: false\n#| code-fold: true\n#| code-summary: \"Code to gather Spotify Data\"\n\n\n#The following commented lines are the popularity index gathered through Python. The remainder of the code is in R:\n#______________________________________________________\n# import spotipy\n# from spotipy.oauth2 import SpotifyClientCredentials\n# import pandas as pd\n\n# client_id = \"48875e31f589401f83c6bd43005d94f7\"\n# client_secret = \"d215e4ea690d4b9b9c1c5e0afbb113a5\"\n\n# # Authenticate with Spotify API\n# sp = spotipy.Spotify(client_credentials_manager=SpotifyClientCredentials(client_id=client_id, client_secret=client_secret))\n\n# artists = [\"Drake\", \"Beyonce\", \"Harry Styles\", \"Taylor Swift\", \"Twice\", \"BTS\", \"EXO\", \"BlackPink\"]\n\n# # Function to get combined data for multiple artists\n# def get_combined_artists_data(artist_names):\n#     combined_data = pd.DataFrame()\n\n#     for artist_name in artist_names:\n        \n#         top_tracks = sp.artist_top_tracks(sp.search(q=artist_name, type=\"artist\")[\"artists\"][\"items\"][0][\"id\"])[\"tracks\"]\n        \n#         # Extract relevant track information\n#         track_data = pd.DataFrame({\n#             \"artist_name\": [artist_name] * len(top_tracks),\n#             \"track_name\": [track[\"name\"] for track in top_tracks],\n#             \"track_id\": [track[\"id\"] for track in top_tracks],\n#             \"popularity\": [track[\"popularity\"] for track in top_tracks],\n#         })\n        \n#         # Combine data for each artist\n#         combined_data = pd.concat([combined_data, track_data], ignore_index=True)\n\n#     return combined_data\n\n# # Example usage\n# combined_artists_df = get_combined_artists_data(artists)\n# print(combined_artists_df)\n\n# combined_artists_df.to_csv(\"raw_data/artists_top_song_popularity.csv\")\n\naccess_token <- get_spotify_access_token()\nartists <- c(\"Drake\", \"Beyonce\", \"Harry Styles\", \"Taylor Swift\", \"Twice\", \"BTS\", \"EXO\", \"BlackPink\")\n\nget_combined_artists_data <- function(artist_names) {\n  combined_data <- data.frame()\n  \n  for (artist_name in artist_names) {\n    artist_data <- get_artist_audio_features(artist_name)\n    \n    selected_columns <- c(\"artist_name\", \"instrumentalness\", \"valence\", \"danceability\",\n                           \"energy\", \"loudness\", \"speechiness\", \"acousticness\",\n                           \"liveness\", \"tempo\", \"track_name\", \"track_id\", \"album_name\",\n                           \"album_release_year\", \"album_release_date\")\n    \n    artist_df <- data.frame(artist_data[selected_columns])\n    \n    colnames(artist_df) <- c(\"artist_name\", \"instrumentalness\", \"valence\", \"danceability\",\n                             \"energy\", \"loudness\", \"speechiness\", \"acousticness\",\n                             \"liveness\", \"tempo\", \"track_name\", \"track_id\", \"album_name\",\n                             \"album_release_year\", \"album_release_date\")\n    \n    # Combine data for each artist\n    combined_data <- bind_rows(combined_data, artist_df)\n  }\n  \n  return(combined_data)\n}\n\nspotify_data <- get_combined_artists_data(artists)\n\nwrite.csv(spotify_data, \"raw_data/spotify_data_raw.csv\")\n\npopularity_data <- read.csv(\"raw_data/artists_top_song_popularity.csv\")\n\npopularity_data <- popularity_data %>%\nselect(\"track_id\", \"popularity\")\n\nspotify_data <- spotify_data %>%\nleft_join(popularity_data, by = 'track_id')\n\nmissing_rows <- is.na(spotify_data$popularity)\n\n# Separate the data into two sets: one with NAs in 'popularity' and one without NAs\ndata_with_na <- spotify_data[missing_rows, ]\ndata_without_na <- spotify_data[!missing_rows, ]\n\n# Build a linear regression model using rows without NAs\nmodel <- lm(popularity ~ instrumentalness + valence + danceability + energy + loudness + speechiness + acousticness + liveness + tempo, data = data_without_na)\n\n# Predict popularity for rows with NAs\npredicted_popularity <- predict(model, newdata = data_with_na)\n\npredicted_popularity <- pmax(1, pmin(predicted_popularity, 100))\n\n# Replace NAs with predicted values\nspotify_data$popularity[missing_rows] <- predicted_popularity\n\nspotify_data$popularity <- as.integer(spotify_data$popularity)\n\nspotify_data <- spotify_data[!(abs(spotify_data$popularity - mean(spotify_data$popularity)) > (3 * sd(spotify_data$popularity))), ]\n\nwrite.csv(spotify_data, \"cleaned_data/spotify_data_cleaned.csv\")\n```\n\n---\n\n# Music Charts\n![](billboard.jpeg){width=100% fig-align='center'}\n\nOne of the longest-running and most influential music charting services is the Billboard Chart. Since 1958, the Billboard charts have  documented the top 100 songs in the United States every week. This extensive and rich dataset spans over six decades, offering a unique lens through which to analyze the trajectory of popular music. By delving into this historical data, we gain valuable insights into the evolution of musical preferences, genre dynamics, and the global impact of the music industry.\n\nThe Billboard Chart serves as a time capsule, allowing us to trace the rise and fall of genres, observe the ebb and flow of musical trends, and investigate the longevity of artists and songs, unveiling the staying power of certain genres and the factors contributing to enduring success.\n\n---\n\n# Music Stock\n\n:::: {.columns}\n\n::: {.column width=\"65%\"}\n\nIn order to analyze artists in the West and in South Korea, we will also need to understand how they are a part of the financial side of the music industry. Thus, we will analyze the stock data of record label companies these artists fall under. For the West, Taylor Swift and Drake are signed to subsidiaries under University Music Group and Harry Styles and Beyonc√© are signed under subsidiaries of SONY. For the four chosen KPOP artists, BTS is signed under HYBE Co. labels, Blackpink is under YG Entertainment, EXO is under SM Entertainment, and Twice is under JYP Entertainment. \n\nUsing the **Quantmod** package, we can analyze the stock prices of several music record companies over a course of multiple years. This will allow us to identify specific trends within the music industry as well as interpret shareholder's opinions of globalization news as well as musical news and other world events throughout history.\n\n:::\n\n::: {.column width=\"5%\"}\n<!-- empty column to create gap -->\n:::\n\n::: {.column width=\"30%\"}\n\n![](images/yahoo.png){fig-align='center'}\n\n:::\n\n:::: \n\n---\n\n# Quantifying Globalization\n\n:::: {.columns}\n\n::: {.column width=\"40%\"}\n\n[![](images/kof.png){fig-align='center'}](https://kof.ethz.ch/en/forecasts-and-indicators/indicators/kof-globalisation-index.html)\n\n:::\n\n::: {.column width=\"5%\"}\n<!-- empty column to create gap -->\n:::\n\n::: {.column width=\"55%\"}\n\nThe Swiss Economic Institute's KOF Globalization index is a way to quantify globalization of a country. This metric was started in the 1970's as countries increasingly began to embrace globalization, which is defined as the process by which businesses or other organizations develop international influence or start operating on an international scale. However, this metric not only quanitfies globalization per country, but it also has mutliple indices for cultural, technological, and social globalization. This metric can be used in tandum with music trends in order to decipher if musical globalization is happening concurrently with general globalization.  \n\n:::\n\n:::: \n\n---\n\n# Korean Tourism\n[![](images/tourism.png){width=90% fig-align='center'}](https://www.statista.com/statistics/709116/south-korea-inbound-visitors/)\n\nIn order to expand upon globalization, we'll also use tourism statistics regarding inbound passengers to South Korea from international travel as a ways to measure interest in the country over time. I've gathered both yearly data of a count of those who visited South Korea purely for tourism as well as monthly data of international arrivals (as a number of passengers) into [Incheon Airport](https://www.airport.kr/co/en/cpr/statisticCategoryOfTimeSeries.do#none), the largest international airport in the country, on account of tourism. This tourist metric into South Korea can be used to explore globalization, but also understand the extent in which Korean culture is reaching people globally.  "},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"data-sources.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","theme":"minty","title":"Data Sources"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}